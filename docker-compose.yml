version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: translation-db
    environment:
      POSTGRES_DB: translation_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d translation_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: translation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: translation-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/translation_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    volumes:
      - ./backend:/app/backend
      - ./storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker (Background Tasks)
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: translation-celery
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/translation_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app/backend
      - ./storage:/app/storage
    depends_on:
      - db
      - redis
    command: celery -A backend.tasks.celery_worker worker --loglevel=info

  # React Frontend (개발용)
  frontend:
    image: node:18-alpine
    container_name: translation-frontend
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host"
    environment:
      - VITE_API_URL=http://localhost:8000

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: translation-network
